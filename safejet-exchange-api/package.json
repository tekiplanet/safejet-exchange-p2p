{
  "name": "safejet-exchange-api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node ./node_modules/typeorm/cli",
    "migration:generate": "npm run typeorm -- migration:generate -d src/config/typeorm.config.ts",
    "migration:run": "npm run typeorm -- migration:run -d src/config/typeorm.config.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d src/config/typeorm.config.ts",
    "typeorm:run-migrations": "npm run build && npx typeorm-ts-node-commonjs migration:run -d dist/config/typeorm.config.js",
    "typeorm:generate-migration": "npx typeorm-ts-node-commonjs migration:generate -d src/config/typeorm.config.ts",
    "typeorm:create-migration": "npx typeorm-ts-node-commonjs migration:create",
    "db:drop": "npm run typeorm schema:drop -- -d src/config/typeorm.config.ts",
    "db:drop-all": "ts-node ./scripts/drop-schema.ts",
    "db:fresh": "npm run db:drop-all && npm run migration:run",
    "seed:payment-methods": "ts-node src/scripts/seed-payment-methods.ts",
    "seed:currencies": "ts-node src/scripts/seed-currencies.ts",
    "seed:tokens": "ts-node src/scripts/seed-tokens.ts",
    "generate:encryption-key": "ts-node src/scripts/generate-encryption-key.ts",
    "clean": "rimraf dist"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/event-emitter": "^2.1.1",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.6",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^4.1.2",
    "@nestjs/throttler": "^6.3.0",
    "@nestjs/typeorm": "^10.0.2",
    "@noble/secp256k1": "^1.7.1",
    "@onfido/api": "^4.4.0",
    "axios": "^1.7.9",
    "bcrypt": "^5.1.1",
    "bitcoinjs-lib": "^6.1.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "country-codes-list": "^1.6.11",
    "decimal.js": "^10.4.3",
    "ecpair": "^2.1.0",
    "ethers": "^5.7.2",
    "geoip-lite": "^1.4.10",
    "nodemailer": "^6.9.16",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.13.1",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "sharp": "^0.33.5",
    "speakeasy": "^2.0.0",
    "tiny-secp256k1": "^2.2.3",
    "tronweb": "^5.3.2",
    "twilio": "^5.4.0",
    "typeorm": "^0.3.20",
    "useragent": "^2.3.0",
    "xrpl": "^4.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^5.0.0",
    "@types/geoip-lite": "^1.4.4",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.17",
    "@types/passport-jwt": "^4.0.1",
    "@types/qrcode": "^1.5.5",
    "@types/speakeasy": "^2.0.10",
    "@types/supertest": "^6.0.0",
    "@types/useragent": "^2.3.4",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "rimraf": "^6.0.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
